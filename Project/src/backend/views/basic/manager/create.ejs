
<!DOCTYPE html>
<html>

<head>

 <meta charset="utf-8">
 <meta name="viewport" content="width=device-width, initial-scale=1.0">

 <title><%=temp.title%></title>

 <link href="/css/bootstrap.min.css" rel="stylesheet">
 <link href="/font-awesome/css/font-awesome.css" rel="stylesheet">

 <link href="/css/animate.css" rel="stylesheet">
 <link href="/css/style.css" rel="stylesheet">
 <link href="/css/pages.css" rel="stylesheet">

</head>

<body class="gray-bg manage">

<div id="app" class="middle-box text-center loginscreen animated fadeInDown">
 <div>
  <div>

   <h1 class="logo-name">Sports Life+</h1>

  </div>
  <h3>Welcome to Sports Life+</h3>
  <p>Perfectly designed and precisely prepared admin theme with over 50 pages with extra new web app views.
   <!--Continually expanded and constantly improved Inspinia Admin Them (IN+)-->
  </p>
  <p>Login in. To manage it.</p>
  <!--<form @submit.prevent="validateBeforeSubmit"  class="m-t" >-->
  <!--<div class="form-group">-->
  <!--<input type="email" v-validate="'required|email'" class="form-control" placeholder="Email" v-model.lazy="model.username" required="">-->
  <!--</div>-->
  <!--<div class="form-group">-->
  <!--<input type="password" v-validate="required|min:6" class="form-control" placeholder="Password" v-model.lazy="model.password" required="">-->
  <!--</div>-->
  <!--<button @submit.prevent="onLogin()" type="submit" class="btn btn-primary block full-width m-b">Login</button>-->

  <!--&lt;!&ndash;            <a href="#"><small>Forgot password?</small></a>&ndash;&gt;-->
  <!--&lt;!&ndash;            <p class="text-muted text-center"><small>Do not have an account?</small></p>&ndash;&gt;-->
  <!--&lt;!&ndash;            <a class="btn btn-sm btn-white btn-block" href="register.html">Create an account</a>&ndash;&gt;-->
  <!--</form>-->
  <!--@submit.prevent="validateBeforeSubmit"-->
  <form @submit.prevent="validateBeforeSubmit">
   <div class="form-group">
    <input name="email" class="form-control" v-model="model.email" v-validate="'required|email'" :class="{'input': true, 'is-danger': errors.has('email') }" type="text" placeholder="Email">
    <i v-show="errors.has('email')" class="fa fa-warning"></i>
    <span v-show="errors.has('email')" class="help is-danger">{{ errors.first('email') }}</span>
   </div>
   <div class="form-group">
    <input name="password" class="form-control" v-model="model.password" v-validate="'required|min:4'" :class="{'input': true, 'is-danger': errors.has('password') }" type="password" placeholder="Password">
    <i v-show="errors.has('password')" class="fa fa-warning"></i>
    <span v-show="errors.has('password')" class="help is-danger">{{ errors.first('password') }}</span>
   </div>
   <button class="btn btn-primary block full-width m-b" >Login</button>
  </form>

  <!--        Footer-->
  <p class="m-t"> <small><%=temp.footer%></small> </p>
 </div>
</div>

<!-- Mainly scripts -->
<!--<script src="/js/jquery-3.1.1.min.js"></script>-->
<!--<script src="/js/bootstrap.min.js"></script>-->

<!--Vue-->
<script src="/js/vue/vue.min.js"></script>
<script src="/js/vue/vue-resource.min.js"></script>
<script src="/js/vue/vee-validate.min.js"></script>

<script src="/js/page/login.js"></script>
<script>

    Vue.use(VeeValidate);
    var vm = new Vue({
        el : '#app',
        data : {
            postUrl : '/manager/create/save',
            directUrl : '/manager/login',
            model : {
                email : '',
                password : '',
            }
        },
        mounted : function () {
        },
        methods : {
         /* Validate */
            validateBeforeSubmit : function () {
                var $this = this;
                this.$validator.validateAll().then(function(){
                    // eslint-disable-next-line
                    $this.onSubmit();
                }).catch(function(){
                    // eslint-disable-next-line
                });
            },
         /* Submit|Send */
            onSubmit : function () {

                var $this = this;
                this.$http.post($this.postUrl,  {model : $this.model})
                    .then(function (json) {
                        if (json.body.code == 200) {
                            top.location = $this.directUrl;
                        } else if (json.body.code == 300) {
                            var errors = json.body.errors;
                            for(var field in errors) {
                                $this.errors.add(field, errors[field]);
                            }
                        }
                    })
            }

        }
    });
</script>
</body>

</html>
